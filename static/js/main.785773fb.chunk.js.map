{"version":3,"sources":["components/Visions/VisionItem.js","components/Visions/VisionForm.js","components/Visions/VisionContent.js","containers/VisionContainer.js","actions/index.js","actions/actionTypes.js","components/Header.js","components/Footer.js","components/App.js","reducers/visions.js","reducers/rootreducer.js","serviceWorker.js","index.js"],"names":["VisionItem","state","displayButtons","_this2","this","react_default","a","createElement","className","id","props","item","style","marginBottom","border","borderRadius","title","onClick","handleDeleteVision","aria-label","text","Component","VisionForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","titleVal","onSubmit","e","preventDefault","handleAddVision","setState","handleTitleChange","target","value","handleTextChange","inherits","createClass","key","type","onChange","placeholder","required","rows","disabled","VisionContent","marginTop","backgroundColor","justify","align","Visions_VisionForm","items","map","VisionItem_VisionItem","VisionContainer","itemValue","selectedItemId","handleSelectEditVision","handleSaveEdit","modifiedItem","handleEditCancel","Visions_VisionContent","mapDispatchToProps","modifiedVision","payload","connect","visions","editingVision","Header","href","src","alt","data-target","Footer","App","showSidebar","components_Header","containers_VisionContainer","components_Footer","initialState","uuid","isOpen","visionReducer","undefined","action","visionItem","objectSpread","toConsumableArray","filter","_ref","find","_ref2","combineReducers","VisionReducer","Boolean","window","location","hostname","match","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.785773fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class VisionItem extends Component {\r\n  state = {\r\n      displayButtons: false,\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <section \r\n        className=\"message is-dark\"\r\n        id={this.props.item.id}\r\n        style=\r\n          {{marginBottom: '10px',\r\n          border: '1px black solid',\r\n          borderRadius: '6px',}}\r\n      >\r\n        <div className=\"message-header\">\r\n          <p>{this.props.item.title}</p>\r\n          <button \r\n            className=\"delete is-medium\"\r\n            onClick={() => this.props.handleDeleteVision(this.props.item.id)}\r\n            aria-label=\"delete\"\r\n          >\r\n          </button>\r\n        </div>\r\n        <div className=\"message-body\">\r\n          {this.props.item.text}\r\n        </div>\r\n      </section>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class VisionForm extends Component {\r\n    state = {\r\n        titleVal: '',\r\n        text: '',\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.handleAddVision(this.state.titleVal, this.state.text);\r\n        this.setState({ titleVal: '', text: ''})\r\n    }\r\n\r\n    handleTitleChange = (e) => {\r\n        this.setState({ titleVal: e.target.value })\r\n    }\r\n\r\n    handleTextChange = (e) => {\r\n        this.setState({ text: e.target.value })\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      <div style={{marginBottom: '50px'}}>\r\n        <form onSubmit={this.onSubmit}>\r\n            <div className='field'>\r\n                <div className='control'>\r\n                    <input\r\n                    type='text'\r\n                    className='input has-text-primary is-primary'\r\n                    value={this.state.titleVal}\r\n                    onChange={this.handleTitleChange}\r\n                    placeholder='Add Title Here...' \r\n                    required\r\n                    />\r\n                </div>    \r\n                <textarea\r\n                    className='textarea has-text-primary has-background-dark is-primary'\r\n                    rows='10'\r\n                    placeholder='Add description here...'\r\n                    onChange={this.handleTextChange}\r\n                    value={this.state.text}\r\n                    required\r\n                />\r\n            </div>\r\n        <div>    \r\n            <button disabled={true ? this.state.text === '' : false} className='button is-light is-large'>\r\n                Click Here To Add Vision\r\n            </button>\r\n        </div>\r\n        </form>\r\n      </div>\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default VisionForm\r\n","import React, { Component } from 'react';\r\nimport VisionItem from './VisionItem';\r\nimport VisionForm from './VisionForm';\r\n\r\n\r\nclass VisionContent extends Component {\r\n    \r\n      \r\n  render( ) {\r\n    return (\r\n        <div\r\n            className='container has-text-centered' \r\n            style={{marginTop: '50px', backgroundColor: 'redindigo'}} \r\n            justify=\"center\" \r\n            align=\"center\"\r\n        >\r\n\r\n            <VisionForm\r\n                style={{marginBottom: '20px'}} \r\n                handleAddVision={this.props.handleAddVision}\r\n            />\r\n\r\n            <div className=''>\r\n            {this.props.items.map((item) => (\r\n\r\n                <VisionItem \r\n                    key={item.id}\r\n                    item={item}\r\n                    handleDeleteVision={this.props.handleDeleteVision}\r\n                />\r\n                ))\r\n            }\r\n            </div>   \r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default VisionContent\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport VisionContent from '../components/Visions/VisionContent';\r\nimport {\r\n    addVision,\r\n    deleteVision,\r\n    editVision,\r\n    saveEdit,\r\n    cancelEdit,\r\n} from '../actions/index';\r\n\r\nclass VisionContainer extends Component {\r\n    handleAddVision = itemValue => this.props.handleAddVision(itemValue);\r\n    handleDeleteVision = selectedItemId => this.props.handleDeleteVision(selectedItemId);\r\n    handleSelectEditVision = id => this.props.handleSelectEditVision(id);\r\n    handleSaveEdit = modifiedItem => this.props.handleSaveEdit(modifiedItem);\r\n    handleEditCancel = selectedItemId => this.props.handleEditCancel(selectedItemId);\r\n      \r\n  render( ) {\r\n    return <VisionContent {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.visions.items,\r\n    editingVision: state.visions.editingVision,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handleAddVision: addVision,\r\n    handleDeleteVision: deleteVision,\r\n    handleSelectEditVision: editVision,\r\n    handleSaveEdit: saveEdit,\r\n    handleEditCancel: cancelEdit,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(VisionContainer);\r\n","import {\r\n    ADD_VISION,\r\n    DELETE_VISION,\r\n    EDIT_VISION,\r\n    SAVE_EDITED_VISION,\r\n    CANCEL_EDIT_VISION,\r\n} from './actionTypes';\r\n\r\n\r\nexport const addVision = (title, text) => ({\r\n    type: ADD_VISION,\r\n    title,\r\n    text\r\n});\r\n\r\nexport const deleteVision = id => ({\r\n    type: DELETE_VISION,\r\n    id\r\n})\r\n\r\nexport const editVision = id => ({\r\n    type: EDIT_VISION,\r\n    id\r\n})\r\n\r\nexport const saveEdit = modifiedVision => ({\r\n    type: SAVE_EDITED_VISION,\r\n    modifiedVision\r\n})\r\n\r\nexport const cancelEdit = () => ({\r\n    type: CANCEL_EDIT_VISION,\r\n    payload: {},\r\n});","export const ADD_VISION = \"ADD_VISION\";\r\nexport const DELETE_VISION = \"DELETE_VISION\";\r\nexport const EDIT_VISION = \"EDIT_VISION\";\r\nexport const SAVE_EDITED_VISION = 'SAVE_EDITED_VISION';\r\nexport const CANCEL_EDIT_VISION = 'CANCEL_EDIT_VISION';","import React from 'react'\r\n/*eslint eqeqeq:0*/\r\n\r\n// Filter component to swap todos visibility state.\r\nconst Header = () => (\r\n  <div className=\"hero-head\">\r\n        <nav className=\"navbar\">\r\n        <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n                <a href='#0' className=\"navbar-item\">\r\n                    <img src=\"\" alt=\"VisionsDreamsIdeas\"/>\r\n                </a>\r\n                <span className=\"navbar-burger burger\" data-target=\"navbarMenuHeroA\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\r\n                <div className=\"navbar-end\">\r\n                    <a href='#0' className=\"navbar-item is-active\">\r\n                    Visions\r\n                    </a>\r\n                    <a href='#0' className=\"navbar-item\">\r\n                    Dreams\r\n                    </a>\r\n                    <a href='#0' className=\"navbar-item\">\r\n                    Ideas\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  </div>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"hero-foot\">\r\n            <div className=\"content has-text-centered\">\r\n                <p>Created by Ry</p>\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react';\nimport VisionContainer from '../containers/VisionContainer';\nimport Header from './Header';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n  state={\n    showSidebar:false,\n  }\n\n  render() {\n    // const { showSidebar } = this.state;\n    return (\n      <section className='hero is-primary is-bold is-fullheight'>\n        <Header />\n        <div className='hero-body is-primary'>\n          <VisionContainer />\n        </div>  \n        <Footer />\n      </section>\n    );\n  }\n}\n\nexport default App;","import uuid from 'uuid';\r\nimport {\r\n    ADD_VISION,\r\n    DELETE_VISION,\r\n    EDIT_VISION,\r\n    SAVE_EDITED_VISION,\r\n    CANCEL_EDIT_VISION,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    items: [{\r\n        title: 'Vision One',\r\n        text: 'THis is sample text for a sample vision',\r\n        id: uuid(),\r\n        isOpen: false,\r\n    },\r\n    {\r\n        title: 'Vision TWO',\r\n        text: 'THis is sample text for a sample vision',\r\n        id: uuid(),\r\n        isOpen: false,\r\n    },\r\n    {\r\n        title: 'Vision 3',\r\n        text: 'THis is sample text for a sample vision',\r\n        id: uuid(),\r\n        isOpen: false,\r\n    }\r\n    ],\r\n};\r\n\r\n// const INIT_STATE = {\r\n//     items: [],\r\n// }\r\n\r\nconst visionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_VISION:\r\n            {\r\n                const id = uuid();\r\n                const visionItem = {\r\n                    title: action.title,\r\n                    text: action.text,\r\n                    id,\r\n                    isOpen: false,\r\n                };\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items, visionItem]\r\n                }\r\n            }\r\n\r\n        case DELETE_VISION:\r\n            {\r\n                const items = state.items.filter(({\r\n                    id\r\n                }) => id !== action.id);\r\n                return {\r\n                    ...state,\r\n                    items\r\n                };\r\n            }\r\n\r\n        case EDIT_VISION:\r\n            {\r\n                const item = state.items.find(({\r\n                    id\r\n                }) => id === action.id);\r\n                return {\r\n                    ...state,\r\n                    editingVision: item\r\n                };\r\n            }\r\n\r\n        case SAVE_EDITED_VISION:\r\n            {\r\n                const items = state.items.map(item => {\r\n                    if (item.id === action.modifiedVision.id) {\r\n                        item.title = action.modifiedVision.title;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    items,\r\n                    editingVision: {}\r\n                };\r\n            }\r\n\r\n        case CANCEL_EDIT_VISION:\r\n            {\r\n                const newState = state.items.length ? {\r\n                    ...state,\r\n                    editingVision: {}\r\n                } : {\r\n                        ...state\r\n                    };\r\n                return newState;\r\n            }\r\n\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n};\r\n\r\nexport default visionReducer;","import {\r\n    combineReducers\r\n  } from 'redux';\r\n  import VisionReducer from './visions'\r\n  \r\n  \r\n  export default combineReducers({\r\n    visions: VisionReducer,\r\n\r\n  });","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootreducer';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}